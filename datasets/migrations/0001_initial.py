# Generated by Django 5.0.2 on 2024-02-28 08:31

import datasets.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la catégorie du jeu de données.', max_length=100, unique=True)),
                ('icon', models.FileField(help_text='Icône de la catégorie du jeu de données. Doit être un fichier SVG monochrome (noir, fond transparent).', upload_to='datasets/category_icons')),
                ('slug', models.SlugField(default=None, max_length=200, null=True)),
            ],
            options={
                'verbose_name': "Catégorie d'un jeu de données",
                'verbose_name_plural': 'Catégories de jeux de données',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.CharField(default=None, max_length=200, null=True)),
                ('name', models.CharField(help_text='Nom du jeu de données', max_length=100, unique=True)),
                ('public', models.BooleanField(default=True, help_text='Indique si le jeu de données peut être partagé publiquement.')),
                ('short_desc', models.TextField(blank=True, default=None, help_text='Description courte du jeu de données affichée dans les listes (max: 400 caractères, optionnel).', max_length=400, null=True)),
                ('description', models.TextField(blank=True, default=None, help_text='Description du jeu de données. Optionnel.', null=True)),
                ('source', models.CharField(blank=True, default=None, help_text='Source du jeu de données. Optionnel.', max_length=100, null=True)),
                ('last_update', models.DateField(auto_now=True, help_text='Date de dernière mise à jour du jeu de données.')),
                ('language', models.CharField(blank=True, default=None, help_text='Langue du jeu de données. Optionnel.', max_length=30, null=True)),
                ('license', models.CharField(blank=True, default=None, help_text='Licence du jeu de données. Optionnel.', max_length=100, null=True)),
                ('usage_restrictions', models.TextField(blank=True, default=None, help_text="Restrictions d'utilisation du jeu de données. Optionnel.", null=True)),
                ('format', models.CharField(choices=[('shapefile', 'Shapefile'), ('geojson', 'GeoJSON')], help_text='Format du jeu de données. Soit un fichier ZIP contenant un fichier shapefile, soit un fichier GeoJSON.', max_length=10)),
                ('encoding', models.CharField(choices=[('utf-8', 'UTF-8'), ('latin-1', 'Latin-1'), ('utf-16', 'UTF-16'), ('ascii', 'ASCII'), ('iso-8859-1', 'ISO-8859-1')], default='utf-8', help_text='Encodage du jeu de données.', max_length=10)),
                ('categories', models.ManyToManyField(blank=True, help_text='Catégories du jeu de données.', to='datasets.datasetcategory')),
            ],
            options={
                'verbose_name': 'Jeu de données',
                'verbose_name_plural': 'Jeux de données',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DatasetTechnicalInformation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(help_text="Clé de l'information technique.", max_length=100)),
                ('value', models.CharField(help_text="Valeur de l'information technique.", max_length=250)),
                ('dataset', models.ForeignKey(help_text="Jeu de données associé à l'information technique.", on_delete=django.db.models.deletion.CASCADE, related_name='technical_information', to='datasets.dataset')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetVersion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de la version du jeu de données.')),
                ('file', models.FileField(blank=True, default=None, help_text='Fichier de la version du jeu de données.', null=True, upload_to=datasets.models.dataset_version_filepath, verbose_name='Fichier')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='datasets.dataset')),
            ],
            options={
                'verbose_name': 'Version de jeu de données',
                'verbose_name_plural': 'Versions de jeux de données',
                'ordering': ['-date'],
            },
        ),
    ]
